version: "3.9"

networks:
  webapp:

services:
  webSupport:
    image: nginx:stable-alpine
    volumes:
      - "./nginx/conf:/etc/nginx/conf.d/"
      - "./../api:/app"
      - "./nginx/logs:/var/log/nginx"
    container_name: supportWeb
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
    depends_on:
      - apiSupport
    networks:
      - webapp
  apiSupport:
    image: bitnami/php-fpm:8.1
    container_name: supportApp
    hostname: support.loc
    volumes:
      - "./../api:/app"
    working_dir: "/app"
    ports:
      - "9000:9000"
    depends_on:
      - postgresSupport
    networks:
      - webapp
  postgresSupport:
    image: postgres:latest
    container_name: supportDB
    environment:
      POSTGRES_DB: "supportdb"
      POSTGRES_USER: "supportuser"
      POSTGRES_PASSWORD: "supportpassword"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./../db/postgres/migrations:/docker-entrypoint-initdb.d
      - ./../db/postgres/data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U supportuser -d supportdb" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
  mailhogSupport:
    image: mailhog/mailhog
    container_name: supportMail
    logging:
      driver: 'none'
    ports:
      - "8003:1025"
      - "8100:8025"
    networks:
      - webapp
